--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v107=v5(v81,v19);v19=nil;return v107;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-((1639 -(1523 + 114)) -1)) -(v32-(620 -(555 + 64)))) + 1)) ;return v82-(v82%1) ;else local v83=931 -(771 + 86 + 74) ;local v84;while true do if (v83==(568 -(367 + (286 -85)))) then v84=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and ((1066 -(68 + 997)) + 0)) or (877 -(282 + 595)) ;end end end end local function v21() local v34=1270 -(226 + 1044) ;local v35;while true do if (v34==(4 -3)) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + ((27 + 91) -(32 + 85)) ;v34=(958 -(892 + 65)) + (0 -0) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + (3 -1) ;return (v37 * (606 -(87 + 263))) + v36 ;end local function v23() local v38=952 -(802 + 150) ;local v39;local v40;local v41;local v42;while true do if (v38==(181 -(67 + 113))) then return (v42 * (7166643 + 5135634 + 4474939)) + (v41 * (176444 -(145859 -34951))) + (v40 * (628 -372)) + v39 ;end if (v38==((1187 -(1069 + 118)) + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (11 -7) ;v38=3 -2 ;end end end local function v24() local v43=v23();local v44=v23();local v45=2 -1 ;local v46=(v20(v44,1139 -(116 + 1022) ,43 -23 ) * (2^(6 + 26))) + v43 ;local v47=v20(v44,37 -16 ,31 + 0 );local v48=((v20(v44,823 -(368 + 423) )==1) and  -1) or ((3 + 0) -(774 -(201 + 571))) ;if (v47==(18 -((41 -31) + 5 + 3))) then if (v46==(0 -0)) then return v48 * (442 -(416 + 26)) ;else v47=3 -2 ;v45=0;end elseif (v47==((3208 -2329) + 1168)) then return ((v46==(0 -0)) and (v48 * ((439 -(145 + 293))/0))) or (v48 * NaN) ;end return v8(v48,v47-(1453 -(44 + 386)) ) * (v45 + (v46/((1488 -(998 + 488))^(17 + 35)))) ;end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(3 -2)) then v51=v3(v16,v18,(v18 + v49) -(860 -(814 + (123 -78))) );v18=v18 + v49 ;v50=2;end if (v50==((15 -11) -2)) then v52={};for v91=1 + 0 + 0 , #v51 do v52[v91]=v2(v1(v3(v51,v91,v91)));end v50=2 + 1 ;end if (v50==(0 + 0)) then v51=nil;if  not v49 then local v101=1747 -(597 + 163 + 987) ;while true do if (v101==(1913 -((2844 -(87 + 968)) + 124))) then v49=v23();if (v49==0) then return "";end break;end end end v50=(3376 -2609) -(745 + 21) ;end if (v50==(888 -(237 + 24 + 624))) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (2~=v53) then else for v93= #"}",v23() do local v94=(function() return v21();end)();if (v20(v94, #">", #"~")==0) then local v102=(function() return 0;end)();local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if (0==v102) then local v113=(function() return 867 -(550 + 317) ;end)();local v114=(function() return;end)();while true do if (v113~=0) then else v114=(function() return 0;end)();while true do if (v114==0) then v103=(function() return v20(v94,2, #"xxx");end)();v104=(function() return v20(v94, #"http",8 -2 );end)();v114=(function() return 1 -0 ;end)();end if (1~=v114) then else v102=(function() return 1;end)();break;end end break;end end end if (v102==2) then if (v20(v104, #">", #"[")~= #"[") then else v105[5 -3 ]=(function() return v59[v105[2]];end)();end if (v20(v104,2,287 -(134 + 151) )== #"{") then v105[ #"nil"]=(function() return v59[v105[ #"-19"]];end)();end v102=(function() return 1668 -(970 + 695) ;end)();end if (v102==(5 -2)) then if (v20(v104, #"xnx", #"91(")== #"\\") then v105[ #".dev"]=(function() return v59[v105[ #"asd1"]];end)();end v54[v93]=(function() return v105;end)();break;end if (v102~=1) then else local v116=(function() return 0;end)();while true do if (v116~=(1991 -(582 + 1408))) then else v102=(function() return 6 -4 ;end)();break;end if (v116~=(0 -0)) then else v105=(function() return {v22(),v22(),nil,nil};end)();if (v103==0) then local v122=(function() return 0 -0 ;end)();while true do if (v122~=(1824 -(1195 + 629))) then else v105[ #"asd"]=(function() return v22();end)();v105[ #".dev"]=(function() return v22();end)();break;end end elseif (v103== #"{") then v105[ #"nil"]=(function() return v23();end)();elseif (v103==(2 -0)) then v105[ #"-19"]=(function() return v23() -(2^(257 -(187 + 54))) ;end)();elseif (v103== #"-19") then local v367=(function() return 0;end)();local v368=(function() return;end)();while true do if (v367~=0) then else v368=(function() return 0;end)();while true do if (v368==0) then v105[ #"gha"]=(function() return v23() -(2^(796 -(162 + 618))) ;end)();v105[ #".dev"]=(function() return v22();end)();break;end end break;end end end v116=(function() return 1 + 0 ;end)();end end end end end end for v95= #"}",v23() do v55[v95-#"." ]=(function() return v28();end)();end return v57;end if ( #","==v53) then local v88=(function() return 0 + 0 ;end)();while true do if (v88~=2) then else v53=(function() return 2;end)();break;end if (v88==(1 -0)) then for v108= #"<",v58 do local v109=(function() return 0;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109==1) then v112=(function() return nil;end)();while true do if (v110~=1) then else if (v111== #".") then v112=(function() return v21()~=(0 -0) ;end)();elseif (v111==2) then v112=(function() return v24();end)();elseif (v111~= #"nil") then else v112=(function() return v25();end)();end v59[v108]=(function() return v112;end)();break;end if (0~=v110) then else local v121=(function() return 0 + 0 ;end)();while true do if (v121~=(1637 -(1373 + 263))) then else v110=(function() return 1001 -(451 + 549) ;end)();break;end if (v121~=0) then else local v201=(function() return 0 + 0 ;end)();while true do if (v201==(1 -0)) then v121=(function() return 1;end)();break;end if (0~=v201) then else v111=(function() return v21();end)();v112=(function() return nil;end)();v201=(function() return 1 -0 ;end)();end end end end end end break;end if (v109~=0) then else v110=(function() return 1384 -(746 + 638) ;end)();v111=(function() return nil;end)();v109=(function() return 1 + 0 ;end)();end end end v57[ #"xnx"]=(function() return v21();end)();v88=(function() return 2 -0 ;end)();end if (v88~=(341 -(218 + 123))) then else v58=(function() return v23();end)();v59=(function() return {};end)();v88=(function() return 1;end)();end end end if (v53~=0) then else local v89=(function() return 1581 -(1535 + 46) ;end)();local v90=(function() return;end)();while true do if (v89~=0) then else v90=(function() return 0;end)();while true do if ((0 + 0)==v90) then v54=(function() return {};end)();v55=(function() return {};end)();v90=(function() return 1 + 0 ;end)();end if (v90~=1) then else v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v90=(function() return 2;end)();end if (v90==(562 -(306 + 254))) then v53=(function() return  #"/";end)();break;end end break;end end end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[1 + 1 ];local v65=v60[5 -2 ];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1468 -(899 + 568) ;local v71= -(1 + 0 + 0);local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v85=603 -(122 + 146 + (661 -(192 + 134))) ,v74 do if ((v85>=v68) or (1065<=90)) then v72[v85-v68 ]=v73[v85 + (291 -(60 + 230)) ];else v76[v85]=v73[v85 + 1 ];end end local v77=(v74-v68) + (573 -(426 + 146)) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1277 -(316 + 960) ];if (v79<=(5 + 36)) then if (v79<=(1476 -(282 + 1174))) then if ((4802==4802) and (v79<=(820 -(569 + 242)))) then if (v79<=4) then if (v79<=(2 -1)) then if (v79>(0 + 0)) then v70=v78[1027 -(706 + 318) ];else v76[v78[1253 -(721 + 530) ]]=v29(v67[v78[1274 -(945 + 326) ]],nil,v62);end elseif (v79<=(4 -2)) then if (v76[v78[2 + 0 + 0 ]]==v78[704 -(271 + 429) ]) then v70=v70 + 1 + 0 ;else v70=v78[1503 -(1087 + 321 + 92) ];end elseif (v79>(1089 -(461 + 625))) then if (v76[v78[2]]==v76[v78[1292 -(918 + 75 + (1127 -832)) ]]) then v70=v70 + 1 + 0 ;else v70=v78[554 -(83 + 468) ];end else local v203=v78[(2979 -(1202 + 604)) -(418 + 753) ];v76[v203](v13(v76,v203 + 1 ,v71));end elseif (v79<=(3 + 3)) then if (v79>(1 + 4)) then v76[v78[9 -7 ]]= #v76[v78[(1 -0) + (5 -3) ]];else v76[v78[1 + 1 ]]=v29(v67[v78[532 -(406 + 123) ]],nil,v62);end elseif (v79<=(1776 -(1749 + 20))) then v76[v78[2]]={};elseif (v79==((327 -(45 + 280)) + 6)) then v76[v78[2]]=v76[v78[1325 -(1249 + 73) ]] + v78[2 + 2 ] ;else v61[v78[1148 -(466 + 679) ]]=v76[v78[2]];end elseif ((v79<=(33 -19)) or (2280<=511)) then if (v79<=(31 -20)) then if (v79==(1910 -(106 + 1732 + 62))) then v76[v78[1 + 1 ]]=v78[1 + 2 ];else for v193=v78[5 -3 ],v78[7 -4 ] do v76[v193]=nil;end end elseif ((v79<=(126 -(4 + 110))) or (1676<=463)) then v76[v78[586 -(57 + 527) ]]=v76[v78[1430 -(41 + 1386) ]];elseif (v79>((102 + 14) -(17 + 32 + 54))) then local v207=v67[v78[3 + 0 + 0 ]];local v208;local v209={};v208=v10({},{__index=function(v286,v287) local v288=0;local v289;while true do if ((3869==3869) and (v288==(0 -0))) then v289=v209[v287];return v289[2 -1 ][v289[168 -(122 + 44) ]];end end end,__newindex=function(v290,v291,v292) local v293=0 -0 ;local v294;while true do if (v293==(0 -0)) then v294=v209[v291];v294[1][v294[2 + 0 ]]=v292;break;end end end});for v295=1 + (1911 -(340 + 1571)) ,v78[4] do v70=v70 + (1 -0) ;local v296=v66[v70];if ((1158<=2613) and (v296[66 -(30 + 35) ]==(41 + 8 + 10))) then v209[v295-(1773 -(1733 + 39)) ]={v76,v296[1215 -(323 + 889) ]};else v209[v295-1 ]={v61,v296[3]};end v75[ #v75 + 1 ]=v209;end v76[v78[322 -(53 + 267) ]]=v29(v207,v208,v62);else local v211=v78[1 + 1 ];v76[v211]=v76[v211](v13(v76,v211 + ((1137 -723) -(15 + (1432 -(125 + 909)))) ,v71));end elseif (v79<=(999 -(18 + 964))) then if (v79<=(56 -41)) then v76[v78[2 + 0 ]][v78[2 + 1 ]]=v76[v78[854 -(20 + 830) ]];elseif (v79>(1964 -(1096 + 852))) then local v213=v67[v78[3]];local v214;local v215={};v214=v10({},{__index=function(v298,v299) local v300=v215[v299];return v300[1 + 0 ][v300[128 -(116 + 10) ]];end,__newindex=function(v301,v302,v303) local v304=0 + 0 ;local v305;while true do if (v304==(738 -(542 + 196))) then v305=v215[v302];v305[1 -0 ][v305[1 + 1 ]]=v303;break;end end end});for v306=1 + 0 ,v78[2 + 2 ] do v70=v70 + (2 -1) ;local v307=v66[v70];if (v307[2 -1 ]==(1610 -(1126 + 425))) then v215[v306-(406 -(118 + 287)) ]={v76,v307[8 -5 ]};else v215[v306-(378 -(142 + 235)) ]={v61,v307[1 + 2 ]};end v75[ #v75 + (978 -(553 + 424)) ]=v215;end v76[v78[3 -1 ]]=v29(v213,v214,v62);else local v217=v78[2 + 0 + 0 ];local v218=v76[v217 + 2 + 0 ];local v219=v76[v217] + v218 ;v76[v217]=v219;if ((v218>(0 + (512 -(409 + 103)))) or (2364<=1999)) then if ((v219<=v76[v217 + 1 + 0 ]) or (4922<194)) then v70=v78[3];v76[v217 + 2 + 1 ]=v219;end elseif ((v219>=v76[v217 + (2 -1) ]) or (2091<31)) then v70=v78[7 -4 ];v76[v217 + 3 ]=v219;end end elseif ((v79<=(40 -22)) or (2430>=4872)) then v76[v78[1 + 1 ]]=v76[v78[14 -11 ]][v76[v78[757 -(239 + 514) ]]];elseif (v79==(7 + 12)) then do return v76[v78[1331 -((1033 -(46 + 190)) + 532) ]];end else v76[v78[2]][v76[v78[3 + 0 ]]]=v76[v78[2 + 2 ]];end elseif (v79<=(70 -40)) then if (v79<=((1322 -(51 + 44)) -(373 + 829))) then if (v79<=(753 -(476 + 255))) then if ((v79==(1151 -(369 + 761))) or (4770<1735)) then do return;end else local v136=0 + 0 ;local v137;while true do if (v136==((0 + 0) -0)) then v137=v78[(1320 -(1114 + 203)) -1 ];do return v76[v137](v13(v76,v137 + (239 -(64 + 174)) ,v78[1 + 2 ]));end break;end end end elseif (v79<=(33 -10)) then if v76[v78[338 -(144 + 192) ]] then v70=v70 + (217 -(42 + (900 -(228 + 498)))) ;else v70=v78[1 + 2 ];end elseif (v79==(19 + 3 + 2)) then local v224=v78[2 + 0 ];local v225={};for v310=1, #v75 do local v311=0 + 0 ;local v312;while true do if (v311==0) then v312=v75[v310];for v386=1504 -(363 + 1141) , #v312 do local v387=v312[v386];local v388=v387[1581 -(1183 + 397) ];local v389=v387[5 -3 ];if (((v388==v76) and (v389>=v224)) or (4439<=2350)) then v225[v389]=v388[v389];v387[(664 -(174 + 489)) + 0 ]=v225;end end break;end end end else local v226=v78[2 + 0 ];v76[v226]=v76[v226]();end elseif (v79<=(2002 -(1913 + 62))) then if (v79==(17 + 9)) then v76[v78[5 -3 ]]=v61[v78[1936 -(565 + 1368) ]];else local v140=v78[7 -5 ];local v141=v76[v140];local v142=v76[v140 + (1663 -(1477 + 184)) ];if (v142>(0 -0)) then if (v141>v76[v140 + 1 + 0 ]) then v70=v78[3];else v76[v140 + 3 ]=v141;end elseif (v141<v76[v140 + ((2232 -1375) -(564 + 292)) ]) then v70=v78[4 -1 ];else v76[v140 + 3 ]=v141;end end elseif (v79<=(84 -56)) then v76[v78[(2211 -(830 + 1075)) -(244 + 60) ]]={};elseif ((v79>(23 + 6)) or (4479<4466)) then local v228=v78[478 -(41 + 435) ];v76[v228](v13(v76,v228 + (1002 -((1462 -(303 + 221)) + 63)) ,v78[3 + 0 ]));else v76[v78[1127 -(936 + 189) ]]=v78[1 + 2 ] + v76[v78[1617 -(1565 + 48) ]] ;end elseif (v79<=(22 + 13)) then if ((2547>1225) and (v79<=(1170 -((2051 -(231 + 1038)) + 356)))) then if (v79==(298 -(176 + 91))) then local v144=v78[2];local v145={};for v195=1, #v75 do local v196=v75[v195];for v230=0 -0 , #v196 do local v231=0;local v232;local v233;local v234;while true do if (v231==(1 -0)) then v234=v232[2];if ((4671>2674) and (v233==v76) and (v234>=v144)) then local v390=1092 -(975 + 117) ;while true do if ((v390==0) or (3696<3327)) then v145[v234]=v233[v234];v232[1876 -(157 + 1718) ]=v145;break;end end end break;end if (v231==(0 + 0 + 0)) then v232=v196[v230];v233=v232[1];v231=1;end end end end else local v146=v78[6 -(1166 -(171 + 991)) ];v76[v146]=v76[v146](v13(v76,v146 + (3 -2) ,v71));end elseif (v79<=((4331 -3280) -(697 + 321))) then v76[v78[5 -3 ]]=v76[v78[5 -2 ]]%v76[v78[(21 -13) -4 ]] ;elseif (v79==(14 + 20)) then local v235=v78[3 -1 ];local v236,v237=v69(v76[v235](v13(v76,v235 + 1 ,v71)));v71=(v237 + v235) -(2 -1) ;local v238=1227 -(322 + 905) ;for v313=v235,v71 do v238=v238 + (612 -(602 + 9)) ;v76[v313]=v236[v238];end else v76[v78[1191 -(449 + 740) ]]();end elseif (v79<=(910 -(826 + 46))) then if (v79<=(983 -(245 + (1751 -1049)))) then do return v76[v78[6 -4 ]];end elseif ((v79==(12 + 25)) or (4542==2970)) then v76[v78[1900 -(260 + 1638) ]]=v62[v78[443 -(382 + 58) ]];else v76[v78[2]]= #v76[v78[9 -6 ]];end elseif (v79<=(32 + 7)) then if v76[v78[2 + 0 ]] then v70=v70 + ((3 -2) -0) ;else v70=v78[8 -5 ];end elseif (v79==(1245 -(902 + 303))) then v76[v78[3 -1 ]]=v62[v78[6 -3 ]];else local v245=0 + 0 ;local v246;while true do if ((252<=1977) and (v245==((4875 -3185) -(1121 + (916 -347))))) then v246=v78[216 -(22 + 192) ];v76[v246]=v76[v246]();break;end end end elseif ((v79<=(745 -(483 + 200))) or (1436==3775)) then if (v79<=(1514 -(1404 + 59))) then if (v79<=46) then if (v79<=((361 -244) -(1322 -(111 + 1137)))) then if ((v79==(200 -(91 + 67))) or (1618<930)) then local v149=v78[2];v76[v149]=v76[v149](v13(v76,v149 + 1 ,v78[3 -0 ]));else v76[v78[767 -(468 + 297) ]]=v76[v78[(1681 -1116) -(334 + 57 + 171) ]]%v78[13 -9 ] ;end elseif ((4723>4153) and (v79<=44)) then v76[v78[(527 -(423 + 100)) -2 ]][v78[(1 + 4) -(5 -3) ]]=v76[v78[2 + 0 + 2 ]];elseif (v79==(281 -(141 + 95))) then if  not v76[v78[2 + 0 ]] then v70=v70 + (2 -1) ;else v70=v78[6 -3 ];end else local v247=0 + (771 -(326 + 445)) ;local v248;local v249;while true do if ((v247==(2 -(4 -3))) or (3654>=4654)) then v76[v248 + (2 -1) + 0 ]=v249;v76[v248]=v249[v78[3 + 1 ]];break;end if (v247==(0 -0)) then v248=v78[2];v249=v76[v78[3]];v247=1 + (0 -0) ;end end end elseif ((951<=1496) and (v79<=48)) then if (v79==(210 -(92 + 71))) then local v154=v78[1 + 1 ];local v155,v156=v69(v76[v154](v13(v76,v154 + (1 -0) ,v71)));v71=(v156 + v154) -(766 -(574 + 191)) ;local v157=0 + 0 ;for v197=v154,v71 do v157=v157 + (2 -1) ;v76[v197]=v155[v157];end else local v158=0 + 0 ;local v159;local v160;local v161;local v162;while true do if (v158==(850 -(254 + 595))) then v71=(v161 + v159) -(127 -(55 + 71)) ;v162=0 -0 ;v158=2;end if ((v158==(1792 -(573 + 1217))) or (1736==571)) then for v335=v159,v71 do v162=v162 + (2 -1) ;v76[v335]=v160[v162];end break;end if (v158==(0 + 0)) then v159=v78[2 -0 ];v160,v161=v69(v76[v159](v76[v159 + (940 -(714 + (936 -(530 + 181)))) ]));v158=2 -1 ;end end end elseif (v79<=(67 -18)) then local v163=0 + 0 ;local v164;local v165;while true do if ((v163==(1 -0)) or (896>4769)) then v76[v164 + ((1688 -(614 + 267)) -(118 + 688)) ]=v165;v76[v164]=v165[v76[v78[36 -(19 + 13) ]]];break;end if (v163==(48 -(25 + (36 -13)))) then v164=v78[1 + 1 ];v165=v76[v78[1889 -(927 + 959) ]];v163=3 -2 ;end end elseif (v79==50) then v70=v78[735 -(16 + 716) ];else v76[v78[3 -1 ]]=v78[100 -(11 + (199 -113)) ]~=0 ;end elseif (v79<=(136 -80)) then if (v79<=53) then if ((v79>(337 -(175 + (314 -204)))) or (1045<=1020)) then do return;end else local v166=0 -0 ;local v167;local v168;local v169;local v170;while true do if (((0 -0)==v166) or (1160<=328)) then v167=v78[1798 -(503 + 1293) ];v168,v169=v69(v76[v167](v13(v76,v167 + (2 -1) ,v78[3 + 0 ])));v166=1062 -(810 + 251) ;end if ((3808>2924) and (v166==1)) then v71=(v169 + v167) -(1 + 0 + 0) ;v170=0;v166=1 + 1 ;end if ((3891<4919) and (v166==(2 + 0))) then for v338=v167,v71 do v170=v170 + 1 ;v76[v338]=v168[v170];end break;end end end elseif ((v79<=(587 -(43 + 490))) or (2234<=1502)) then local v171=v78[735 -(711 + 22) ];v76[v171]=v76[v171](v13(v76,v171 + (3 -2) ,v78[3]));elseif ((v79>(914 -(240 + (1088 -469)))) or (2512<432)) then for v323=v78[2],v78[3] do v76[v323]=nil;end elseif  not v76[v78[3 -1 ]] then v70=v70 + 1 + 0 ;else v70=v78[(1816 -(1293 + 519)) -1 ];end elseif (v79<=(4 + 55)) then if (v79<=57) then v76[v78[1746 -(1344 + 400) ]]=v76[v78[408 -(255 + 150) ]][v76[v78[4]]];elseif (v79>(46 + 12)) then v76[v78[2]]=v76[v78[2 + 1 ]];else local v254=v78[2];local v255=v76[v254 + (8 -6) ];local v256=v76[v254] + v255 ;v76[v254]=v256;if ((v255>(0 -0)) or (1848==865)) then if (v256<=v76[v254 + (1740 -(404 + 1335)) ]) then v70=v78[409 -((373 -190) + 223) ];v76[v254 + (3 -(0 -0)) ]=v256;end elseif ((v256>=v76[v254 + 1 + 0 ]) or (4682<=4541)) then v70=v78[2 + (1 -0) ];v76[v254 + (340 -((43 -33) + 327)) ]=v256;end end elseif (v79<=60) then local v175=v78[(4 -2) + 0 ];do return v13(v76,v175,v71);end elseif (v79==(399 -(118 + 220))) then local v258=0 + 0 ;local v259;local v260;while true do if ((449 -(108 + 341))==v258) then v259=v78[2];v260=v76[v78[2 + 0 + 1 ]];v258=4 -3 ;end if (v258==(1494 -(711 + 782))) then v76[v259 + (1 -0) ]=v260;v76[v259]=v260[v76[v78[4]]];break;end end else v76[v78[2]]=v78[1 + 2 ] + v76[v78[9 -5 ]] ;end elseif (v79<=((126 + 416) -(270 + 199))) then if (v79<=(22 + 15 + 30)) then if (v79<=((1177 + 706) -(580 + 1239))) then if (v79>((1283 -(709 + 387)) -124)) then local v176=v78[2 + 0 ];do return v13(v76,v176,v176 + v78[3] );end else v76[v78[1 + 1 ]]=v76[v78[3]][v78[2 + 2 ]];end elseif (v79<=(169 -104)) then v76[v78[2 + 0 ]]=v61[v78[3]];elseif (v79==(1233 -(645 + 522))) then if (v76[v78[1792 -(1010 + 780) ]]==v78[4 + 0 ]) then v70=v70 + (4 -3) ;else v70=v78[3];end else v76[v78[5 -3 ]]=v78[1861 -(673 + 1185) ];end elseif (v79<=(1906 -((3030 -1985) + 791))) then if (v79<=(171 -103)) then v76[v78[2 -0 ]]=v78[9 -6 ]~=(505 -(351 + 154)) ;elseif ((v79>(1643 -(1281 + 293))) or (3026>=4046)) then local v264=v78[268 -((45 -17) + 238) ];do return v76[v264](v13(v76,v264 + 1 ,v78[6 -(3 + 0) ]));end else local v265=v78[1561 -(1381 + 178) ];local v266,v267=v69(v76[v265](v13(v76,v265 + 1 ,v78[3])));v71=(v267 + v265) -(1 + 0 + 0) ;local v268=0 + 0 ;for v325=v265,v71 do v268=v268 + 1 ;v76[v325]=v266[v268];end end elseif (v79<=(31 + 40)) then local v182=v78[6 -4 ];local v183=v76[v182];local v184=v76[v182 + 2 + 0 ];if ((2008>638) and (v184>(470 -(381 + 89)))) then if (v183>v76[v182 + 1 + (0 -0) ]) then v70=v78[3 + 0 + 0 ];else v76[v182 + (5 -2) ]=v183;end elseif ((1775<=3233) and (v183<v76[v182 + (1 -0) ])) then v70=v78[3];else v76[v182 + ((2274 -1115) -(1074 + 82)) ]=v183;end elseif (v79==((2037 -(446 + 1434)) -85)) then v76[v78[1786 -(214 + 1570) ]]=v76[v78[3]]%v76[v78[1459 -(990 + 465) ]] ;else v76[v78[2]]=v76[v78[2 + (1284 -(1040 + 243)) ]] + v78[2 + 2 ] ;end elseif (v79<=(76 + 2)) then if (v79<=75) then if (v79==((868 -577) -(2064 -(559 + 1288)))) then v76[v78[1728 -(1668 + 58) ]]();else v76[v78[628 -(512 + 114) ]]=v76[v78[3]][v78[10 -6 ]];end elseif (v79<=(156 -80)) then if ((v76[v78[6 -4 ]]==v76[v78[1935 -(609 + 1322) ]]) or (4543==1997)) then v70=v70 + 1 + 0 ;else v70=v78[3];end elseif ((v79==(15 + 62)) or (3102<728)) then local v272=v78[2 + 0 ];v76[v272](v13(v76,v272 + (3 -2) ,v71));else v76[v78[1996 -(109 + 1885) ]][v76[v78[457 -(13 + 441) ]]]=v76[v78[1473 -(1269 + 200) ]];end elseif ((345==345) and (v79<=(155 -74))) then if (v79<=((3340 -2446) -(98 + 717))) then local v187=v78[828 -(802 + 24) ];local v188=v76[v78[5 -2 ]];v76[v187 + 1 ]=v188;v76[v187]=v188[v78[4 -0 ]];elseif ((v79==((31 -19) + 68)) or (2827<378)) then local v275=0 + 0 ;local v276;local v277;local v278;local v279;while true do if (v275==0) then v276=v78[2];v277,v278=v69(v76[v276](v76[v276 + 1 + (0 -0) ]));v275=1 + 0 ;end if (v275==(1 + 1)) then for v383=v276,v71 do v279=v279 + (2 -(3 -2)) ;v76[v383]=v277[v279];end break;end if (1==v275) then v71=(v278 + v276) -(3 -2) ;v279=0;v275=2;end end else v61[v78[2 + 1 ]]=v76[v78[1 + 1 ]];end elseif (v79<=(30 + 52)) then v76[v78[2 + 0 ]]=v76[v78[3 + 0 ]]%v78[2 + 1 + 1 ] ;elseif (v79>((4498 -2982) -(797 + 636))) then local v282=v78[9 -(4 + 3) ];v76[v282](v13(v76,v282 + (1620 -(1427 + 192)) ,v78[(3 -1) + 1 + 0 ]));else local v283=v78[4 -2 ];do return v13(v76,v283,v71);end end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
